
@define NEXT_VERSION="0.9.7.1"
@define TUSH_REPO=https://github.com/adolfopa/tush

@options timing

@goal soft_folder_created
@reached_if [[ -d "soft" ]]
  mkdir soft

@goal tush_installed
@depends_on soft_folder_created
@reached_if [[ -f "soft/tush/bin/tush-check" ]]
  echo
  echo "Fetching tush..."
  echo

  cd "soft"

  if which wget >/dev/null 2>/dev/null
  then
    wget $TUSH_REPO/archive/master.tar.gz -O./tush.tar.gz
    tar xzvf ./tush.tar.gz
    rm ./tush.tar.gz
    mv tush-master tush
  else
    git clone --depth 1 $TUSH_REPO.git
    rm -r tush/.git
  fi

@goal soft_installed
@depends_on tush_installed

@goal cleaned

@goal cleaned_soft
@reached_if [[ ! -d "soft" ]]
  rm -r "soft"

@goal cleaned_all
@depends_on cleaned cleaned_soft

@goal debug
  AWK="${AWK:-awk}"
  case "$AWK" in
    *mawk*) "$AWK" -W version 2>&1 | head -n 1
            ;;
         *) "$AWK" --version | head -n 1
            ;;
  esac
  bash --version| head -n 1

@goal prepared4tests
@depends_on tush_installed debug

@goal_glob tests/*.tush
@depends_on prepared4tests
  f="$ITEM"

  function calc_temp_files {
    local tmp_count=$(find /tmp -maxdepth 1 -type f -name 'makesure.*' | wc -l)
    local cnt
    (( cnt = tmp_count ))
    if [[ -d "/dev/shm" ]]
    then
      local shm_count=$(find /dev/shm -maxdepth 1 -type f -name 'makesure.*' | wc -l)
      (( cnt += shm_count ))
    fi
    echo $cnt
  }

  before_count=$(calc_temp_files)

  export PATH="$PATH:$MYDIR/soft/tush/bin"
  export NEXT_VERSION="NEXT_VERSION"

  if DIFF="diff --strip-trailing-cr" tush-check "$f"
  then
    echo "TESTS PASSED : $f"
  else
    echo >&2 "!!! TESTS FAILED !!! : $f"
    exit 1
  fi
  after_count=$(calc_temp_files)
  if (( before_count != after_count ))
  then
    echo >&2 "!!! temp file not deleted !!!"
    exit 1
  fi

@goal tested
@depends_on tests/0_basic.tush
@depends_on tests/1_goals.tush
@depends_on tests/2_mydir.tush
@depends_on tests/3_loop.tush
@depends_on tests/4_trace.tush
@depends_on tests/5_shell.tush
@depends_on tests/6_reached_if.tush
@depends_on tests/7_options.tush
@depends_on tests/8_timing.tush
@depends_on tests/9_prelude.tush
@depends_on tests/10_define.tush
@depends_on tests/11_goal_glob.tush
@depends_on tests/12_update.tush

@goal stable
@doc Prepare for release
@depends_on makesure_stable README.md

@goal README.md
@depends_on makesure_stable
  awk '
    /^\$ \.\/makesure -h$/ { print; stop=1; system("./makesure_stable -h") }
    /^```$/ { stop=0 }
    !stop' README.md > README.md.1
  mv README.md.1 README.md

@goal makesure_stable
@depends_on tested
  OUT=makesure_stable

  {
    echo '#!/bin/sh'
    echo
    echo "VERSION=\"$NEXT_VERSION\""
    echo
    echo "exec awk -v \"Version=\$VERSION\" -v \"Prog=\$0\" '"
    awk "{ gsub(\"'\",\"'\\\\''\"); print}" makesure.awk
    echo \'' Makesurefile "$@"'
  } > $OUT

@goal default
@depends_on tested

@goal tested_awks
@depends_on tested
@depends_on tested_bwk
@depends_on tested_mawk
@depends_on tested_mawk134
@depends_on tested_gawk51

@goal tested_bwk
@depends_on installed_bwk
  AWK="$(pwd)/soft/bwk" ./makesure tested

@goal tested_mawk134
@depends_on installed_mawk134
  AWK="$(pwd)/soft/mawk134" ./makesure tested

@goal tested_gawk51
@depends_on installed_gawk51
  AWK="$(pwd)/soft/gawk51" ./makesure tested

@goal tested_mawk
  AWK="/usr/bin/mawk" ./makesure tested

@goal installed_awks
@depends_on installed_bwk
@depends_on installed_gawk51
@depends_on installed_mawk134

@goal installed_bwk
@reached_if [[ -f soft/bwk ]]
@depends_on soft_folder_created
  echo
  echo "Fetching BWK..."
  echo

  cd "soft"

  wget https://github.com/onetrueawk/awk/archive/refs/heads/master.tar.gz -Obwk.tar.gz
  tar xzvf bwk.tar.gz
  rm bwk.tar.gz

  echo
  echo "Compile BWK..."
  echo

  cd "awk-master"

  make

  mv a.out ../bwk

  cd ..
  ./bwk --version
  rm -r awk-master

@goal installed_gawk51
@reached_if [[ -f soft/gawk51 ]]
@depends_on soft_folder_created
  echo
  echo "Fetching Gawk-5.1.0..."
  echo

  cd "soft"

  G=gawk-5.1.0.tar.gz
  wget "http://git.savannah.gnu.org/cgit/gawk.git/snapshot/$G"
  tar xzvf "$G"
  rm "$G"

  echo
  echo "Compile Gawk-5.1.0..."
  echo

  cd "gawk-5.1.0"

  ./configure && make && make check

  mv gawk ../gawk51

  cd ..
  ./gawk51 --version
  rm -r "gawk-5.1.0"

@goal installed_mawk134
@reached_if [[ -f soft/mawk134 ]]
@depends_on soft_folder_created
  echo
  echo "Fetching Mawk 1.3.4..."
  echo

  cd "soft"

  F=mawk.tar.gz
  wget "https://invisible-island.net/datafiles/release/$F"
  tar xzvf "$F"
  rm "$F"

  echo
  echo "Compile Mawk 1.3.4..."
  echo

  cd mawk-1.3.4-*

  ./configure && make

  mv mawk ../mawk134

  cd ..
  ./mawk134 -W version
  rm -r mawk-1.3.4-*
